{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ArthurSGC\\\\Desktop\\\\TUTORIAL REACT - TICTACTOE\\\\tic-tac-toe-react\\\\tic-tac-toe\\\\src\\\\index.jsx\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\"; // class Square extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             value: null\n//         };\n//     }\n//     render() {\n//         return (\n//             <button\n//                 className=\"square\"\n//                 onClick={() => this.props.onClick()}\n//             >\n//                 {this.props.value}\n//             </button>\n//         );\n//     }\n// }\n// SQUARE 2.0\n\nfunction Square(props) {\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    style: props.winnerRow ? {\n      color: \"red\"\n    } : {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, props.value);\n}\n\nclass Board extends React.Component {\n  renderSquare(i, isWinnerRow) {\n    return /*#__PURE__*/React.createElement(Square, {\n      winnerRow: isWinnerRow,\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 16\n      }\n    });\n  }\n\n  render() {\n    let winner = this.props.winnerRows;\n    let isWinner = winner != null;\n    let rowsValues = [false, false, false, false, false, false, false, false, false];\n\n    if (isWinner) {\n      winner.map(row => {\n        return rowsValues[row] = true;\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, this.renderSquare(0, rowsValues[0])), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, this.renderSquare(1, rowsValues[1])), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, this.renderSquare(2, rowsValues[2]))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, this.renderSquare(3, rowsValues[3])), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, this.renderSquare(4, rowsValues[4])), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, this.renderSquare(5, rowsValues[5]))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, this.renderSquare(6, rowsValues[6])), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, this.renderSquare(7, rowsValues[7])), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, this.renderSquare(8, rowsValues[8]))));\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      stepNumber: 0,\n      xIsNext: true\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      const desc = move ? \"Go to move #\" + move : \"Go to game start\";\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: move,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.jumpTo(move),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }\n      }, desc));\n    });\n    let status;\n\n    if (winner) {\n      status = \"Winner: \" + winner;\n    } else {\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\n    } //console.log(winner);\n\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Board, {\n      winnerRows: winner,\n      squares: current.squares,\n      onClick: i => this.handleClick(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }\n    }, status), /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }\n    }, moves)));\n  }\n\n} // ===============\n\n\nReactDOM.render( /*#__PURE__*/React.createElement(Game, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }\n}), document.getElementById('root'));\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      //console.log([a, b, c]);\n      return [a, b, c];\n    }\n  }\n\n  return null;\n}","map":{"version":3,"sources":["C:/Users/ArthurSGC/Desktop/TUTORIAL REACT - TICTACTOE/tic-tac-toe-react/tic-tac-toe/src/index.jsx"],"names":["React","ReactDOM","Square","props","onClick","winnerRow","color","value","Board","Component","renderSquare","i","isWinnerRow","squares","render","winner","winnerRows","isWinner","rowsValues","map","row","Game","constructor","state","history","Array","fill","stepNumber","xIsNext","handleClick","slice","current","length","calculateWinner","setState","concat","jumpTo","step","moves","move","desc","status","document","getElementById","lines","a","b","c"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAO,aAAP,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACnB,sBACI;AACI,IAAA,SAAS,EAAC,QADd;AAEI,IAAA,OAAO,EAAEA,KAAK,CAACC,OAFnB;AAGI,IAAA,KAAK,EAAGD,KAAK,CAACE,SAAP,GAAoB;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAApB,GAAuC,EAHlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKKH,KAAK,CAACI,KALX,CADJ;AASH;;AAED,MAAMC,KAAN,SAAoBR,KAAK,CAACS,SAA1B,CAAoC;AAChCC,EAAAA,YAAY,CAACC,CAAD,EAAIC,WAAJ,EAAiB;AACzB,wBAAO,oBAAC,MAAD;AACH,MAAA,SAAS,EAAEA,WADR;AAEH,MAAA,KAAK,EAAE,KAAKT,KAAL,CAAWU,OAAX,CAAmBF,CAAnB,CAFJ;AAGH,MAAA,OAAO,EAAE,MAAM,KAAKR,KAAL,CAAWC,OAAX,CAAmBO,CAAnB,CAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAKH;;AAEDG,EAAAA,MAAM,GAAG;AACL,QAAIC,MAAM,GAAG,KAAKZ,KAAL,CAAWa,UAAxB;AACA,QAAIC,QAAQ,GAAGF,MAAM,IAAI,IAAzB;AAEA,QAAIG,UAAU,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EACb,KADa,EACN,KADM,EACC,KADD,EAEb,KAFa,EAEN,KAFM,EAEC,KAFD,CAAjB;;AAIA,QAAID,QAAJ,EAAc;AACVF,MAAAA,MAAM,CAACI,GAAP,CAAYC,GAAD,IAAS;AAChB,eAAOF,UAAU,CAACE,GAAD,CAAV,GAAkB,IAAzB;AACH,OAFD;AAGH;;AAED,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,KAAKV,YAAL,CAAkB,CAAlB,EAAqBQ,UAAU,CAAC,CAAD,CAA/B,CAAP,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,KAAKR,YAAL,CAAkB,CAAlB,EAAqBQ,UAAU,CAAC,CAAD,CAA/B,CAAP,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,KAAKR,YAAL,CAAkB,CAAlB,EAAqBQ,UAAU,CAAC,CAAD,CAA/B,CAAP,CAHJ,CADJ,eAMI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,KAAKR,YAAL,CAAkB,CAAlB,EAAqBQ,UAAU,CAAC,CAAD,CAA/B,CAAP,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,KAAKR,YAAL,CAAkB,CAAlB,EAAqBQ,UAAU,CAAC,CAAD,CAA/B,CAAP,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,KAAKR,YAAL,CAAkB,CAAlB,EAAqBQ,UAAU,CAAC,CAAD,CAA/B,CAAP,CAHJ,CANJ,eAWI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,KAAKR,YAAL,CAAkB,CAAlB,EAAqBQ,UAAU,CAAC,CAAD,CAA/B,CAAP,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,KAAKR,YAAL,CAAkB,CAAlB,EAAqBQ,UAAU,CAAC,CAAD,CAA/B,CAAP,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,KAAKR,YAAL,CAAkB,CAAlB,EAAqBQ,UAAU,CAAC,CAAD,CAA/B,CAAP,CAHJ,CAXJ,CADJ;AAmBH;;AA1C+B;;AA6CpC,MAAMG,IAAN,SAAmBrB,KAAK,CAACS,SAAzB,CAAmC;AAC/Ba,EAAAA,WAAW,CAACnB,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKoB,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,CAAC;AACNX,QAAAA,OAAO,EAAEY,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd;AADH,OAAD,CADA;AAITC,MAAAA,UAAU,EAAE,CAJH;AAKTC,MAAAA,OAAO,EAAE;AALA,KAAb;AAOH;;AAEDC,EAAAA,WAAW,CAAClB,CAAD,EAAI;AACX,UAAMa,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAAX,CAAmBM,KAAnB,CAAyB,CAAzB,EAA4B,KAAKP,KAAL,CAAWI,UAAX,GAAwB,CAApD,CAAhB;AACA,UAAMI,OAAO,GAAGP,OAAO,CAACA,OAAO,CAACQ,MAAR,GAAiB,CAAlB,CAAvB;AACA,UAAMnB,OAAO,GAAGkB,OAAO,CAAClB,OAAR,CAAgBiB,KAAhB,EAAhB;;AACA,QAAIG,eAAe,CAACpB,OAAD,CAAf,IAA4BA,OAAO,CAACF,CAAD,CAAvC,EAA4C;AACxC;AACH;;AACDE,IAAAA,OAAO,CAACF,CAAD,CAAP,GAAa,KAAKY,KAAL,CAAWK,OAAX,GAAqB,GAArB,GAA2B,GAAxC;AACA,SAAKM,QAAL,CAAc;AACVV,MAAAA,OAAO,EAAEA,OAAO,CAACW,MAAR,CAAe,CAAC;AACrBtB,QAAAA,OAAO,EAAEA;AADY,OAAD,CAAf,CADC;AAIVc,MAAAA,UAAU,EAAEH,OAAO,CAACQ,MAJV;AAKVJ,MAAAA,OAAO,EAAE,CAAC,KAAKL,KAAL,CAAWK;AALX,KAAd;AAOH;;AAEDQ,EAAAA,MAAM,CAACC,IAAD,EAAO;AACT,SAAKH,QAAL,CAAc;AACVP,MAAAA,UAAU,EAAEU,IADF;AAEVT,MAAAA,OAAO,EAAGS,IAAI,GAAG,CAAR,KAAe;AAFd,KAAd;AAIH;;AAEDvB,EAAAA,MAAM,GAAG;AACL,UAAMU,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAA3B;AACA,UAAMO,OAAO,GAAGP,OAAO,CAAC,KAAKD,KAAL,CAAWI,UAAZ,CAAvB;AACA,UAAMZ,MAAM,GAAGkB,eAAe,CAACF,OAAO,CAAClB,OAAT,CAA9B;AAEA,UAAMyB,KAAK,GAAGd,OAAO,CAACL,GAAR,CAAY,CAACkB,IAAD,EAAOE,IAAP,KAAgB;AACtC,YAAMC,IAAI,GAAGD,IAAI,GACb,iBAAiBA,IADJ,GAEb,kBAFJ;AAIA,0BACI;AAAI,QAAA,GAAG,EAAEA,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AACI,QAAA,OAAO,EAAE,MAAM,KAAKH,MAAL,CAAYG,IAAZ,CADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGKC,IAHL,CADJ,CADJ;AASH,KAda,CAAd;AAgBA,QAAIC,MAAJ;;AACA,QAAI1B,MAAJ,EAAY;AACR0B,MAAAA,MAAM,GAAG,aAAa1B,MAAtB;AACH,KAFD,MAEO;AACH0B,MAAAA,MAAM,GAAG,mBAAmB,KAAKlB,KAAL,CAAWK,OAAX,GAAqB,GAArB,GAA2B,GAA9C,CAAT;AACH,KA1BI,CA4BL;;;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AACI,MAAA,UAAU,EAAEb,MADhB;AAEI,MAAA,OAAO,EAAEgB,OAAO,CAAClB,OAFrB;AAGI,MAAA,OAAO,EAAGF,CAAD,IAAO,KAAKkB,WAAL,CAAiBlB,CAAjB,CAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,eAQI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM8B,MAAN,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKH,KAAL,CAFJ,CARJ,CADJ;AAeH;;AAhF8B,C,CAmFnC;;;AAEArC,QAAQ,CAACa,MAAT,eACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEI4B,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFJ;;AAKA,SAASV,eAAT,CAAyBpB,OAAzB,EAAkC;AAC9B,QAAM+B,KAAK,GAAG,CACV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADU,EAEV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFU,EAGV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHU,EAIV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJU,EAKV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CALU,EAMV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CANU,EAOV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAPU,EAQV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CARU,CAAd;;AAWA,OAAK,IAAIjC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiC,KAAK,CAACZ,MAA1B,EAAkCrB,CAAC,EAAnC,EAAuC;AACnC,UAAM,CAACkC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,IAAYH,KAAK,CAACjC,CAAD,CAAvB;;AACA,QACIE,OAAO,CAACgC,CAAD,CAAP,IACAhC,OAAO,CAACgC,CAAD,CAAP,KAAehC,OAAO,CAACiC,CAAD,CADtB,IAEAjC,OAAO,CAACgC,CAAD,CAAP,KAAehC,OAAO,CAACkC,CAAD,CAH1B,EAIE;AACE;AACA,aAAO,CAACF,CAAD,EAAIC,CAAJ,EAAOC,CAAP,CAAP;AACH;AACJ;;AAED,SAAO,IAAP;AACH","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./index.css\";\r\n\r\n// class Square extends React.Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             value: null\r\n//         };\r\n//     }\r\n\r\n//     render() {\r\n//         return (\r\n//             <button\r\n//                 className=\"square\"\r\n//                 onClick={() => this.props.onClick()}\r\n//             >\r\n//                 {this.props.value}\r\n//             </button>\r\n//         );\r\n//     }\r\n// }\r\n\r\n// SQUARE 2.0\r\nfunction Square(props) {\r\n    return (\r\n        <button\r\n            className=\"square\"\r\n            onClick={props.onClick}\r\n            style={(props.winnerRow) ? { color: \"red\" } : {}}\r\n        >\r\n            {props.value}\r\n        </button>\r\n    );\r\n}\r\n\r\nclass Board extends React.Component {\r\n    renderSquare(i, isWinnerRow) {\r\n        return <Square\r\n            winnerRow={isWinnerRow}\r\n            value={this.props.squares[i]}\r\n            onClick={() => this.props.onClick(i)}\r\n        />\r\n    }\r\n\r\n    render() {\r\n        let winner = this.props.winnerRows;\r\n        let isWinner = winner != null;\r\n\r\n        let rowsValues = [false, false, false,\r\n            false, false, false,\r\n            false, false, false];\r\n\r\n        if (isWinner) {\r\n            winner.map((row) => {\r\n                return rowsValues[row] = true;\r\n            });\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"board-row\">\r\n                    <span>{this.renderSquare(0, rowsValues[0])}</span>\r\n                    <span>{this.renderSquare(1, rowsValues[1])}</span>\r\n                    <span>{this.renderSquare(2, rowsValues[2])}</span>\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    <span>{this.renderSquare(3, rowsValues[3])}</span>\r\n                    <span>{this.renderSquare(4, rowsValues[4])}</span>\r\n                    <span>{this.renderSquare(5, rowsValues[5])}</span>\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    <span>{this.renderSquare(6, rowsValues[6])}</span>\r\n                    <span>{this.renderSquare(7, rowsValues[7])}</span>\r\n                    <span>{this.renderSquare(8, rowsValues[8])}</span>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            history: [{\r\n                squares: Array(9).fill(null)\r\n            }],\r\n            stepNumber: 0,\r\n            xIsNext: true\r\n        };\r\n    }\r\n\r\n    handleClick(i) {\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n        if (calculateWinner(squares) || squares[i]) {\r\n            return;\r\n        }\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n        this.setState({\r\n            history: history.concat([{\r\n                squares: squares,\r\n            }]),\r\n            stepNumber: history.length,\r\n            xIsNext: !this.state.xIsNext\r\n        });\r\n    }\r\n\r\n    jumpTo(step) {\r\n        this.setState({\r\n            stepNumber: step,\r\n            xIsNext: (step % 2) === 0\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNumber];\r\n        const winner = calculateWinner(current.squares);\r\n\r\n        const moves = history.map((step, move) => {\r\n            const desc = move ?\r\n                \"Go to move #\" + move :\r\n                \"Go to game start\";\r\n\r\n            return (\r\n                <li key={move}>\r\n                    <button\r\n                        onClick={() => this.jumpTo(move)}\r\n                    >\r\n                        {desc}\r\n                    </button>\r\n                </li>\r\n            );\r\n        });\r\n\r\n        let status;\r\n        if (winner) {\r\n            status = \"Winner: \" + winner;\r\n        } else {\r\n            status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\r\n        }\r\n\r\n        //console.log(winner);\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Board\r\n                        winnerRows={winner}\r\n                        squares={current.squares}\r\n                        onClick={(i) => this.handleClick(i)}\r\n                    />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div>{status}</div>\r\n                    <ol>{moves}</ol>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// ===============\r\n\r\nReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n);\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n    ];\r\n\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (\r\n            squares[a] &&\r\n            squares[a] === squares[b] &&\r\n            squares[a] === squares[c]\r\n        ) {\r\n            //console.log([a, b, c]);\r\n            return [a, b, c];\r\n        }\r\n    }\r\n\r\n    return null;\r\n}"]},"metadata":{},"sourceType":"module"}